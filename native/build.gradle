//file:noinspection GroovyAssignabilityCheck
//file:noinspection ConfigurationAvoidance
plugins {
    id "io.github.arc-blroth.cargo-wrapper" version "1.1.0"
//    id "fr.stardustenterprises.rust.wrapper" version "3.2.5"
}

group = rootProject.group
version = rootProject.version

cargo {
    crate = projectDir.path
    outputs = [
            '': System.mapLibraryName('bloomware_native')
    ]
    profile = 'release'
}

//rust {
//    // Setting the global "default" vars
//    release.set(true)
//
//    // you can also use tools like "cross"
//    command.set("cargo")
//
//    // this will make cargo install automatically the required targets
//    // `rustup targets add x86_64-pc-windows-gnu`
//    cargoInstallTargets.set(true)
//
//    var os = ""
//    var osName = System.getProperty("os.name").toLowerCase()
//    if (osName.contains("win")) {
//        os = "windows"
//    } else if (osName.contains("mac")) {
//        os = "darwin"
//    } else if (osName.contains("nux")) {
//        os = "linux"
//    }
//    var arch = System.getProperty("os.arch").toLowerCase()
//
//    targets {
//        if (os == "darwin") {
//            if (arch == "aarch64") {
//                create("aarch64-apple-darwin") {
//                    target = "aarch64-apple-darwin"
//                    outputName = "libbloomware_native_darwin_arm64.dylib"
//                }
//            } else {
//                create("x86_64-apple-darwin") {
//                    target = "x86_64-apple-darwin"
//                    outputName = "libbloomware_native_darwin_amd64.dylib"
//                }
//            }
//        } else {
//            create("x86_64-unknown-linux-gnu") {
//                target = "x86_64-unknown-linux-gnu"
//                outputName = "libbloomware_native_linux_amd64.so"
//            }
//            create("x86_64-pc-windows-gnu") {
//                target = "x86_64-pc-windows-gnu"
//                outputName = "bloomware_native_windows_amd64.dll"
//            }
//        }
//    }

//    // Adding a target with modfified options
//    targets += target("i686-pc-windows-gnu", "test.dll").apply {
//        release = false
//    }
//
//    // Defining per-targets
//    targets {
//        // Adds the default target
//        this += defaultTarget()
//
//        // Creates a named target with a custom file output
//        create("win64") {
//            target = "x86_64-pc-windows-gnu"
//            outputName = "test64.dll"
//        }
//
//        // Custom target with different params than default
//        create("macOS-x86") {
//            target = "x86_64-apple-darwin"
//            outputName = "libtest64.dylib"
//        }
//
//        create("macOS-aarch64") {
//            target = "aarch64-apple-darwin"
//            outputName = "libtest64.dylib"
//        }
//    }
//}